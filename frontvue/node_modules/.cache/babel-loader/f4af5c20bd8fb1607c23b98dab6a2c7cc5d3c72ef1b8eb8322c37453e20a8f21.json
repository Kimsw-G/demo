{"ast":null,"code":"export default {\n  components: {},\n  data() {\n    return {\n      year: 0,\n      month: 0,\n      dayData: {\n        firstDay: 0,\n        lastDay: 0,\n        preLastday: 0,\n        date: []\n      }\n    };\n  },\n  created() {\n    this.init();\n  },\n  mounted() {},\n  unmounted() {},\n  methods: {\n    init(param) {\n      if (param) {\n        // 다른 날짜로 이동시 \n        this.year = param[0];\n        this.month = param[1];\n        this.calendarDate();\n      } else {\n        // 초기 화면 렌더링시\n        const date = new Date();\n        this.year = date.getFullYear();\n        this.month = date.getMonth() + 1;\n        this.calendarDate();\n      }\n    },\n    getFirstDayLastDate(year, month) {\n      // 1일의 요일 및 마지막 날짜 구하기\n      const firstDay = new Date(year, month - 1, 1).getDay(); // 1일의 요일\n      const lastDate = new Date(year, month, 0).getDate(); // 마지막 날짜\n\n      let lastMonth = month - 1;\n      if (month === 1) {\n        lastMonth = 12;\n        year -= 1;\n      }\n      const prevLastDate = new Date(year, lastMonth, 0).getDate(); // 저번달의 마지막 날짜\n      return [firstDay, lastDate, prevLastDate];\n    },\n    setDayDate() {\n      for (let i = 0; i < 6; i++) {\n        for (let j = 0; j < 7; j++) {}\n      }\n    },\n    setDayData() {\n      let tmp = this.getFirstDayLastDate(this.year, this, this.month);\n      this.dayData.firstDay = tmp[0];\n      this.dayData.lastDay = tmp[1];\n      this.dayData.preLastday = tmp[2];\n    }\n  }\n};","map":{"version":3,"mappings":"AAaA,eAAe;EACXA,UAAU,EAAE,CAAC,CAAC;EACdC,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE;QACLC,QAAQ,EAAE,CAAC;QACXC,OAAO,EAAE,CAAC;QACVC,UAAU,EAAE,CAAC;QACbC,IAAI,EAAE;MACV;IAEJ;EACJ,CAAC;EACDC,OAAO,GAAG;IACN,IAAI,CAACC,IAAI,EAAC;EACd,CAAC;EACDC,OAAO,GAAG,CAAE,CAAC;EACbC,SAAS,GAAG,CAAE,CAAC;EACfC,OAAO,EAAE;IACLH,IAAI,CAACI,KAAK,EAAE;MACR,IAAIA,KAAK,EAAE;QAAE;QACT,IAAI,CAACZ,IAAG,GAAIY,KAAK,CAAC,CAAC;QACnB,IAAI,CAACX,KAAI,GAAIW,KAAK,CAAC,CAAC;QACpB,IAAI,CAACC,YAAY,EAAC;MACtB,OAAO;QAAE;QACL,MAAMP,IAAG,GAAI,IAAIQ,IAAI,EAAC;QACtB,IAAI,CAACd,IAAG,GAAIM,IAAI,CAACS,WAAW,EAAC;QAC7B,IAAI,CAACd,KAAI,GAAIK,IAAI,CAACU,QAAQ,EAAC,GAAI;QAE/B,IAAI,CAACH,YAAY,EAAC;MACtB;IACJ,CAAC;IACDI,mBAAmB,CAACjB,IAAI,EAAEC,KAAK,EAAE;MAAE;MAC/B,MAAME,QAAO,GAAI,IAAIW,IAAI,CAACd,IAAI,EAAEC,KAAI,GAAI,CAAC,EAAE,CAAC,CAAC,CAACiB,MAAM,EAAC,EAAE;MACvD,MAAMC,QAAO,GAAI,IAAIL,IAAI,CAACd,IAAI,EAAEC,KAAK,EAAE,CAAC,CAAC,CAACmB,OAAO,EAAC,EAAE;;MAEpD,IAAIC,SAAQ,GAAIpB,KAAI,GAAI;MACxB,IAAIA,KAAI,KAAM,CAAC,EAAE;QACboB,SAAQ,GAAI,EAAC;QACbrB,IAAG,IAAK;MACZ;MACA,MAAMsB,YAAW,GAAI,IAAIR,IAAI,CAACd,IAAI,EAAEqB,SAAS,EAAE,CAAC,CAAC,CAACD,OAAO,EAAC,EAAE;MAC5D,OAAO,CAACjB,QAAQ,EAAEgB,QAAQ,EAAEG,YAAY;IAC5C,CAAC;IACDC,UAAU,GAAG;MACT,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QACxB,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,CAE5B;MACJ;IACJ,CAAC;IACDC,UAAU,GAAG;MACT,IAAIC,GAAE,GAAI,IAAI,CAACV,mBAAmB,CAAC,IAAI,CAACjB,IAAI,EAAE,IAAI,EAAE,IAAI,CAACC,KAAK;MAC9D,IAAI,CAACC,OAAO,CAACC,QAAO,GAAIwB,GAAG,CAAC,CAAC;MAC7B,IAAI,CAACzB,OAAO,CAACE,OAAM,GAAIuB,GAAG,CAAC,CAAC;MAC5B,IAAI,CAACzB,OAAO,CAACG,UAAS,GAAIsB,GAAG,CAAC,CAAC;IAEnC;EACJ;AACJ","names":["components","data","year","month","dayData","firstDay","lastDay","preLastday","date","created","init","mounted","unmounted","methods","param","calendarDate","Date","getFullYear","getMonth","getFirstDayLastDate","getDay","lastDate","getDate","lastMonth","prevLastDate","setDayDate","i","j","setDayData","tmp"],"sourceRoot":"","sources":["C:\\Users\\ds\\Documents\\ksw\\swtodo\\frontvue\\src\\views\\TodocalView.vue"],"sourcesContent":["<template>\r\n    <div>{{ year }} {{ month }}</div>\r\n    <div id=\"calbody\">\r\n        <nav>\r\n            <div><router-link to=\"/todocal\">일정</router-link></div>\r\n            <div><router-link to=\"/todocal\">가계</router-link></div>\r\n        </nav>\r\n        <div>\r\n            여긴 달력페이지\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    components: {},\r\n    data() {\r\n        return {\r\n            year: 0,\r\n            month: 0,\r\n            dayData: {\r\n                firstDay: 0,\r\n                lastDay: 0,\r\n                preLastday: 0,\r\n                date: []\r\n            }\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.init()\r\n    },\r\n    mounted() { },\r\n    unmounted() { },\r\n    methods: {\r\n        init(param) {\r\n            if (param) { // 다른 날짜로 이동시 \r\n                this.year = param[0]\r\n                this.month = param[1]\r\n                this.calendarDate()\r\n            } else { // 초기 화면 렌더링시\r\n                const date = new Date()\r\n                this.year = date.getFullYear()\r\n                this.month = date.getMonth() + 1\r\n\r\n                this.calendarDate()\r\n            }\r\n        },\r\n        getFirstDayLastDate(year, month) { // 1일의 요일 및 마지막 날짜 구하기\r\n            const firstDay = new Date(year, month - 1, 1).getDay() // 1일의 요일\r\n            const lastDate = new Date(year, month, 0).getDate() // 마지막 날짜\r\n\r\n            let lastMonth = month - 1\r\n            if (month === 1) {\r\n                lastMonth = 12\r\n                year -= 1\r\n            }\r\n            const prevLastDate = new Date(year, lastMonth, 0).getDate() // 저번달의 마지막 날짜\r\n            return [firstDay, lastDate, prevLastDate]\r\n        },\r\n        setDayDate() {\r\n            for (let i = 0; i < 6; i++) {\r\n                for (let j = 0; j < 7; j++) {\r\n\r\n                }\r\n            }\r\n        },\r\n        setDayData() {\r\n            let tmp = this.getFirstDayLastDate(this.year, this, this.month)\r\n            this.dayData.firstDay = tmp[0]\r\n            this.dayData.lastDay = tmp[1]\r\n            this.dayData.preLastday = tmp[2]\r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n#calbody {\r\n    display: grid;\r\n    grid-template-columns: 7vw 93vw;\r\n    height: 95vh;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}