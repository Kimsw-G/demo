{"ast":null,"code":"export default {\n  props: {\n    isAddTodo: Boolean\n  },\n  components: {},\n  data() {\n    return {\n      dows: ['일', '월', '화', '수', '목', '금', '토'],\n      isDows: [false, false, false, false, false, false, false],\n      errMsg: '',\n      start_day: '',\n      end_day: '',\n      ttitle: '',\n      ttext: '',\n      suser: ''\n    };\n  },\n  created() {},\n  mounted() {},\n  unmounted() {},\n  methods: {\n    closeModal(event) {\n      if (event.target.classList.contains(\"black-bg\")) this.$emit(\"closeTodo\");\n    },\n    checkDow(idx) {\n      this.isDows[idx] = !this.isDows[idx];\n      let button = document.querySelector(\"#button\" + idx);\n      if (this.isDows[idx]) {\n        //색 넣기\n        button.style.backgroundColor = \"#7de0b4\";\n      } else {\n        button.style.backgroundColor = \"beige\";\n      }\n    },\n    overMouse(idx) {\n      console.log('hi');\n      let button = document.querySelector(\"#button\" + idx);\n      button.style.backgroundColor = \"#7de0b4\";\n    },\n    leaveMouse(idx) {\n      let button = document.querySelector(\"#button\" + idx);\n      if (!this.isDows[idx]) button.style.backgroundColor = \"white\";\n    },\n    submitData() {\n      let freq = 0;\n      for (let i = 0; i < this.isDows.length; i++) {\n        if (this.isDows[i]) freq += Math.pow(2, i);\n      }\n      let data = {\n        start_day: this.start_day,\n        end_day: this.end_day,\n        ttitle: this.ttitle,\n        ttext: this.ttext,\n        suser: 1\n      };\n      this.axios.post(\"/todo/addTodo\", {\n        data,\n        freq\n      }).then(() => {\n        this.$emit(\"closeEvent\");\n      }).catch(() => {\n        this.errMsg = '에러가 발생하였습니다.\\n 잠시후 재시도 부탁드립니다.';\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAyBA,eAAe;EACXA,KAAK,EAAC;IACFC,SAAS,EAAEC;EACf,CAAC;EACDC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAC,CACD,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAE,CAC7B;MACDC,MAAM,EAAC,CACH,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAC5C;MACDC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAO,GAAG,CAAC,CAAC;EACZC,OAAO,GAAG,CAAC,CAAC;EACZC,SAAS,GAAG,CAAC,CAAC;EACdC,OAAO,EAAE;IACLC,UAAU,CAACC,KAAK,EAAC;MACb,IAAGA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE,IAAI,CAACC,KAAK,CAAC,WAAW;IAC1E,CAAC;IACDC,QAAQ,CAACC,GAAG,EAAC;MACT,IAAI,CAAClB,MAAM,CAACkB,GAAG,IAAI,CAAC,IAAI,CAAClB,MAAM,CAACkB,GAAG;MACnC,IAAIC,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,SAAS,GAACH,GAAG;MACjD,IAAG,IAAI,CAAClB,MAAM,CAACkB,GAAG,CAAC,EAAC;QAAC;QACjBC,MAAM,CAACG,KAAK,CAACC,eAAe,GAAE,SAAS;MAC3C,CAAC,MAAI;QACDJ,MAAM,CAACG,KAAK,CAACC,eAAe,GAAE,OAAO;MACzC;IACJ,CAAC;IACDC,SAAS,CAACN,GAAG,EAAC;MACVO,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB,IAAIP,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,SAAS,GAACH,GAAG;MACjDC,MAAM,CAACG,KAAK,CAACC,eAAe,GAAC,SAAQ;IACzC,CAAC;IACDI,UAAU,CAACT,GAAG,EAAC;MACX,IAAIC,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,SAAS,GAACH,GAAG;MACjD,IAAG,CAAC,IAAI,CAAClB,MAAM,CAACkB,GAAG,CAAC,EAACC,MAAM,CAACG,KAAK,CAACC,eAAe,GAAC,OAAM;IAC5D,CAAC;IACDK,UAAU,GAAE;MACR,IAAIC,IAAI,GAAC;MACT,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAI,IAAI,CAAC9B,MAAM,CAAC+B,MAAM,EAAED,CAAC,EAAE,EAAE;QACzC,IAAG,IAAI,CAAC9B,MAAM,CAAC8B,CAAC,CAAC,EAAED,IAAI,IAAEG,IAAI,CAACC,GAAG,CAAC,CAAC,EAACH,CAAC;MACzC;MACA,IAAIhC,IAAG,GAAI;QACPI,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,KAAK,EAAE;MACX;MACA,IAAI,CAAC4B,KAAK,CAACC,IAAI,CAAC,eAAe,EAAC;QAACrC,IAAI;QAAC+B;MAAI,EACzC,CAACO,IAAI,CAAC,MAAI;QACP,IAAI,CAACpB,KAAK,CAAC,YAAY;MAC3B,CAAC,CAAC,CAACqB,KAAK,CAAC,MAAI;QACT,IAAI,CAACpC,MAAK,GAAI,gCAA+B;MACjD,CAAC;IACL;EACJ;AACJ","names":["props","isAddTodo","Boolean","components","data","dows","isDows","errMsg","start_day","end_day","ttitle","ttext","suser","created","mounted","unmounted","methods","closeModal","event","target","classList","contains","$emit","checkDow","idx","button","document","querySelector","style","backgroundColor","overMouse","console","log","leaveMouse","submitData","freq","i","length","Math","pow","axios","post","then","catch"],"sourceRoot":"","sources":["C:\\Users\\ds\\Documents\\ksw\\swtodo\\frontvue\\src\\components\\todo\\AddTodoView.vue"],"sourcesContent":["<template>\r\n<div class=\"black-bg\" @click=\"closeModal\">\r\n    <div class=\"white-bg\">\r\n        <label class=\"ttitle-label\" for=\"ttitle\">제목</label>\r\n        <input type=\"text\" id=\"ttitle\" name=\"ttitle\" v-model=\"ttitle\"> <br>\r\n        <label class=\"date-label\" for=\"startday\" >시작일</label><label class=\"date-label\" for=\"endday\">종료일</label>\r\n        <input type=\"date\" id=\"startday\" class=\"date\" name=\"startday\" v-model=\"start_day\"><input type=\"date\" id=\"endday\" class=\"date\" name=\"endday\" v-model=\"end_day\"> <br>\r\n        <div class=\"dow-box\">\r\n            <button @click=\"checkDow(idx)\" \r\n                    @mouseover=\"overMouse(idx)\"\r\n                    @mouseleave=\"leaveMouse(idx)\"\r\n                    v-for=\"(dow,idx) in dows\" \r\n                    :key=\"dow\"\r\n                    :id=\"`button${idx}`\"\r\n                    :class=\"'button'\">\r\n                {{dow}}\r\n            </button>\r\n        </div>\r\n        <textarea rows=\"\" cols=\"\" id=\"ttext\" name=\"etext\" v-model=\"ttext\"/>\r\n        <button id=\"submit\" @click=\"submitData\">제출테스트</button>\r\n        <pre id=\"errMsg\">{{ errMsg }}</pre>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    props:{\r\n        isAddTodo: Boolean\r\n    },\r\n    components: {},\r\n    data() {\r\n        return {\r\n            dows:[\r\n                '일','월','화','수','목','금','토'\r\n            ],\r\n            isDows:[\r\n                false,false,false,false,false,false,false,\r\n            ],\r\n            errMsg: '',\r\n            start_day: '',\r\n            end_day: '',\r\n            ttitle: '',\r\n            ttext: '',\r\n            suser: ''\r\n        }\r\n    },\r\n    created() {},\r\n    mounted() {},\r\n    unmounted() {},\r\n    methods: {\r\n        closeModal(event){\r\n            if(event.target.classList.contains(\"black-bg\")) this.$emit(\"closeTodo\")\r\n        },\r\n        checkDow(idx){\r\n            this.isDows[idx] = !this.isDows[idx]\r\n            let button = document.querySelector(\"#button\"+idx)\r\n            if(this.isDows[idx]){//색 넣기\r\n                button.style.backgroundColor= \"#7de0b4\";\r\n            }else{\r\n                button.style.backgroundColor= \"beige\";\r\n            }\r\n        },\r\n        overMouse(idx){\r\n            console.log('hi');\r\n            let button = document.querySelector(\"#button\"+idx)\r\n            button.style.backgroundColor=\"#7de0b4\"\r\n        },\r\n        leaveMouse(idx){\r\n            let button = document.querySelector(\"#button\"+idx)\r\n            if(!this.isDows[idx])button.style.backgroundColor=\"white\"\r\n        },\r\n        submitData(){\r\n            let freq=0\r\n            for (let i = 0; i < this.isDows.length; i++) {\r\n                if(this.isDows[i]) freq+=Math.pow(2,i)\r\n            }\r\n            let data = {\r\n                start_day: this.start_day,\r\n                end_day: this.end_day,\r\n                ttitle: this.ttitle,\r\n                ttext: this.ttext,\r\n                suser: 1\r\n            }\r\n            this.axios.post(\"/todo/addTodo\",{data,freq}\r\n            ).then(()=>{\r\n                this.$emit(\"closeEvent\")\r\n            }).catch(()=>{\r\n                this.errMsg = '에러가 발생하였습니다.\\n 잠시후 재시도 부탁드립니다.'\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\ninput{\r\n    padding: 5px 7px;\r\n}\r\n#ttitle{\r\n    width: 90%;\r\n    height: 2em;\r\n    margin: 3px;\r\n}\r\n.ttitle-label{\r\n    display: inline-block;\r\n    width: 90%;\r\n    margin-top: 10px;\r\n}\r\n.date-label{\r\n    display: inline-block;\r\n    width: 45%;\r\n}\r\n#startday, #endday{\r\n    width: 45%;\r\n    height: 2em;\r\n}\r\n.dow-box{\r\n    margin: 3px auto ;\r\n    width: 90%;\r\n    display: grid;\r\n    grid-template-columns: repeat(7,1fr);\r\n    gap: 1px;\r\n    justify-items: center;\r\n}\r\n.button{\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 15px;\r\n    border: 0px;\r\n    background-color: beige;\r\n}\r\n#ttext{\r\n    padding: 0.5em;\r\n    width: 90%;\r\n    height: 4em;\r\n}\r\n#errMsg {\r\n    color: red;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}