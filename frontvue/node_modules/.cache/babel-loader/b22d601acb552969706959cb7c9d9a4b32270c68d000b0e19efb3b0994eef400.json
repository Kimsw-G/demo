{"ast":null,"code":"import { reactive, ref } from 'vue';\nexport default {\n  components: {},\n  data() {\n    return {\n      sampleData: ''\n    };\n  },\n  created() {},\n  setup() {\n    const state = reactive({\n      id: '',\n      password: '',\n      password_chk: '',\n      name: ''\n    });\n    const id = ref(null);\n    const password = ref(null);\n    // const password_chk = ref(null)\n    const name = ref(null);\n    const checkID = () => {\n      const ID_LENGTH_MIN = 6;\n      if (state.id.length < ID_LENGTH_MIN) {\n        alert('아이디는 6글자 이상입니다');\n        id.value.focus();\n        return true;\n      }\n      return false;\n    };\n    const goToPassword = () => {\n      state.password = '';\n      state.password_chk = '';\n      password.value.focus();\n    };\n    const checkPassword = () => {\n      if (state.password != state.password_chk) {\n        alert('패스워드가 일치하지 않습니다');\n        goToPassword();\n        return true;\n      }\n      return false;\n    };\n    const checkPasswordLaw = () => {\n      let regPass = /^(?=.*[a-zA-Z])(?=.*[0-9]).{10,20}$/;\n      if (!regPass.test(state.password)) {\n        alert(\"영문, 숫자 조합으로 10-20자리 입력해주세요.\");\n        goToPassword();\n        return true;\n      }\n      return false;\n    };\n    const checkName = () => {\n      console.log(name.value);\n      if (state.name.length == 0) {\n        alert(\"이름을 입력해 주세요\");\n        name.value.focus();\n        return true;\n      }\n      return false;\n    };\n    const signUp = () => {\n      // 회원가입 axios\n      console.log('회원가입 완료');\n    };\n    const checkAll = () => {\n      if (checkID()) return;\n      if (checkPassword()) return;\n      if (checkPasswordLaw()) return;\n      if (checkName()) return;\n      signUp();\n    };\n    return {\n      checkAll,\n      state,\n      id,\n      password\n    };\n  }\n};","map":{"version":3,"mappings":"AAgBA,SAASA,QAAQ,EAACC,GAAE,QAAS,KAAI;AACjC,eAAe;EACXC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAI,GAAG;IACH,OAAO;MACHC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,OAAO,GAAG,CAAE,CAAC;EACbC,KAAK,GAAE;IAEH,MAAMC,KAAI,GAAIP,QAAQ,CAAC;MACnBQ,EAAE,EAAE,EAAE;MACNC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,IAAI,EAAE;IACV,CAAC;IACD,MAAMH,EAAC,GAAIP,GAAG,CAAC,IAAI;IACnB,MAAMQ,QAAO,GAAIR,GAAG,CAAC,IAAI;IACzB;IACA,MAAMU,IAAG,GAAIV,GAAG,CAAC,IAAI;IACrB,MAAMW,OAAM,GAAI,MAAI;MAChB,MAAMC,aAAY,GAAI;MACtB,IAAGN,KAAK,CAACC,EAAE,CAACM,MAAM,GAACD,aAAa,EAAC;QAC7BE,KAAK,CAAC,gBAAgB;QACtBP,EAAE,CAACQ,KAAK,CAACC,KAAK,EAAC;QACf,OAAO,IAAI;MACf;MACA,OAAO,KAAI;IACf;IACA,MAAMC,YAAW,GAAI,MAAI;MACrBX,KAAK,CAACE,QAAQ,GAAC,EAAC;MAChBF,KAAK,CAACG,YAAY,GAAC,EAAC;MACpBD,QAAQ,CAACO,KAAK,CAACC,KAAK,EAAC;IACzB;IACA,MAAME,aAAY,GAAI,MAAI;MACtB,IAAGZ,KAAK,CAACE,QAAQ,IAAEF,KAAK,CAACG,YAAY,EAAC;QAClCK,KAAK,CAAC,iBAAiB;QACvBG,YAAY,EAAC;QACb,OAAO,IAAI;MACf;MACA,OAAO,KAAI;IACf;IACA,MAAME,gBAAe,GAAI,MAAI;MACzB,IAAIC,OAAM,GAAI,qCAAoC;MAClD,IAAI,CAACA,OAAO,CAACC,IAAI,CAACf,KAAK,CAACE,QAAQ,CAAC,EAAE;QAC/BM,KAAK,CAAC,6BAA6B;QACnCG,YAAY,EAAC;QACb,OAAO,IAAG;MACd;MACA,OAAO,KAAI;IACf;IACA,MAAMK,SAAQ,GAAI,MAAI;MAClBC,OAAO,CAACC,GAAG,CAACd,IAAI,CAACK,KAAK,CAAC;MACvB,IAAGT,KAAK,CAACI,IAAI,CAACG,MAAM,IAAE,CAAC,EAAC;QACpBC,KAAK,CAAC,aAAa;QACnBJ,IAAI,CAACK,KAAK,CAACC,KAAK,EAAC;QACjB,OAAO,IAAG;MACd;MACA,OAAO,KAAI;IACf;IACA,MAAMS,MAAK,GAAI,MAAI;MACf;MACAF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B;IAEA,MAAME,QAAO,GAAI,MAAI;MACjB,IAAGf,OAAO,EAAE,EAAE;MACd,IAAGO,aAAa,EAAE,EAAE;MACpB,IAAGC,gBAAgB,EAAE,EAAE;MACvB,IAAGG,SAAS,EAAE,EAAE;MAChBG,MAAM,EAAC;IACX;IAIA,OAAM;MACFC,QAAQ;MAAEpB,KAAK;MAAEC,EAAE;MAAEC;IACzB;EACJ;AACJ","names":["reactive","ref","components","data","sampleData","created","setup","state","id","password","password_chk","name","checkID","ID_LENGTH_MIN","length","alert","value","focus","goToPassword","checkPassword","checkPasswordLaw","regPass","test","checkName","console","log","signUp","checkAll"],"sourceRoot":"","sources":["C:\\Users\\ds\\Documents\\ksw\\swtodo\\frontvue\\src\\views\\SignupView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"sign-box\">\r\n            <input type=\"text\" placeholder=\"6자리 이상의 아이디\" class=\"all-box \" v-model=\"state.id\" ref=\"id\">\r\n            <input type=\"password\" placeholder=\"영어와 숫자를 포함한 10자리 이상 비밀번호\" class=\"all-box \" v-model=\"state.password\" ref=\"password\">\r\n            <input type=\"password\" placeholder=\"비밀번호 확인\" class=\"all-box\" v-model=\"state.password_chk\" ref=\"password_chk\">\r\n            <input type=\"text\" placeholder=\"이름\" class=\"all-box\" v-model=\"state.name\" ref=\"name\">\r\n            <div>\r\n                <input type=\"text\" placeholder=\"이름\" class=\"all-box call-box\" v-model=\"state.phone\" ref=\"phone\"/>\r\n                <button>인증하기</button>\r\n            </div>\r\n            <button class=\"login-button all-box\" @click=\"checkAll\">회원가입(임시)</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { reactive,ref } from 'vue'\r\nexport default {\r\n    components: {},\r\n    data() {\r\n        return {\r\n            sampleData: ''\r\n        }\r\n    },\r\n    created() { },\r\n    setup(){\r\n        \r\n        const state = reactive({\r\n            id: '',\r\n            password: '',\r\n            password_chk: '',\r\n            name: '',\r\n        })\r\n        const id = ref(null)\r\n        const password = ref(null)\r\n        // const password_chk = ref(null)\r\n        const name = ref(null)\r\n        const checkID = ()=>{\r\n            const ID_LENGTH_MIN = 6\r\n            if(state.id.length<ID_LENGTH_MIN){\r\n                alert('아이디는 6글자 이상입니다')\r\n                id.value.focus()\r\n                return true;\r\n            }\r\n            return false\r\n        }\r\n        const goToPassword = ()=>{\r\n            state.password=''\r\n            state.password_chk=''\r\n            password.value.focus()\r\n        }\r\n        const checkPassword = ()=>{\r\n            if(state.password!=state.password_chk){\r\n                alert('패스워드가 일치하지 않습니다')\r\n                goToPassword()\r\n                return true;\r\n            }\r\n            return false\r\n        }\r\n        const checkPasswordLaw = ()=>{\r\n            let regPass = /^(?=.*[a-zA-Z])(?=.*[0-9]).{10,20}$/\r\n            if (!regPass.test(state.password)) {\r\n                alert(\"영문, 숫자 조합으로 10-20자리 입력해주세요.\")\r\n                goToPassword()\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n        const checkName = ()=>{\r\n            console.log(name.value);\r\n            if(state.name.length==0){\r\n                alert(\"이름을 입력해 주세요\")\r\n                name.value.focus()\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n        const signUp = ()=>{\r\n            // 회원가입 axios\r\n            console.log('회원가입 완료');\r\n        }\r\n\r\n        const checkAll = ()=>{\r\n            if(checkID()) return\r\n            if(checkPassword()) return\r\n            if(checkPasswordLaw()) return\r\n            if(checkName()) return\r\n            signUp()\r\n        }\r\n\r\n        \r\n\r\n        return{\r\n            checkAll, state, id, password\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.sign-box{\r\n    display: grid;\r\n    width: 25vw;\r\n    min-width: 300px;\r\n    gap: 0.4em;\r\n    margin: 0 auto;\r\n    margin-top:5em;\r\n}\r\n.all-box{\r\n    height: 4em;\r\n    border-radius: 10px;\r\n}\r\ninput{\r\n    padding: 10px;\r\n}\r\n.login-button:hover{\r\n    background-color: #d9d9d9;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}