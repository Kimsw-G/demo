{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    issAddEvent: Boolean\n  },\n  components: {},\n  data() {\n    return {\n      etitle: '',\n      dday: '',\n      etext: '',\n      errMsg: ''\n    };\n  },\n  created() {},\n  mounted() {},\n  unmounted() {},\n  methods: {\n    closeModal(event) {\n      if (event.target.classList.contains(\"black-bg\")) this.$emit(\"closeEvent\");\n    },\n    registEvent() {\n      let data = {\n        etitle: this.etitle,\n        etext: this.etext,\n        suser: 1,\n        dday: this.dday\n        // suser : this.suser\n        // 추후 유저도 추가\n      };\n\n      // this.axios.defaults.headers.common = {\n      //     'Content-Type': 'application/json'\n      // }\n      axios.post(\"/feed/addEvent\", data).then(res => {\n        console.log(res);\n        this.$emit(\"closeEvent\");\n      }).catch(() => {\n        this.errMsg = '에러가 발생하였습니다.\\n 잠시후 재시도 부탁드립니다.';\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAcA,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACXC,KAAK,EAAE;IACHC,WAAW,EAAEC;EACjB,CAAC;EACDC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAI,GAAG;IACH,OAAO;MACHC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,GAAG,CAAE,CAAC;EACbC,OAAO,GAAG,CAAE,CAAC;EACbC,SAAS,GAAG,CAAE,CAAC;EACfC,OAAO,EAAE;IACLC,UAAU,CAACC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE,IAAI,CAACC,KAAK,CAAC,YAAY;IAC5E,CAAC;IACDC,WAAW,GAAG;MACV,IAAIf,IAAG,GAAI;QACPC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBa,KAAK,EAAE,CAAC;QACRd,IAAI,EAAE,IAAI,CAACA;QACX;QACA;MACJ;;MAEA;MACA;MACA;MACAP,KAAK,CAACsB,IAAI,CAAC,gBAAgB,EAAEjB,IAAG,CAC/B,CAACkB,IAAI,CAACC,GAAE,IAAK;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACL,KAAK,CAAC,YAAY;MAC3B,CAAC,CAAC,CAACQ,KAAK,CAAC,MAAM;QACX,IAAI,CAAClB,MAAK,GAAI,gCAA+B;MACjD,CAAC;IACL;EAEJ;AACJ","names":["axios","props","issAddEvent","Boolean","components","data","etitle","dday","etext","errMsg","created","mounted","unmounted","methods","closeModal","event","target","classList","contains","$emit","registEvent","suser","post","then","res","console","log","catch"],"sourceRoot":"","sources":["C:\\Users\\ds\\Documents\\ksw\\swtodo\\frontvue\\src\\components\\todo\\AddEventView.vue"],"sourcesContent":["<template>\r\n    <div class=\"black-bg\" @click=\"closeModal\">\r\n        <div class=\"white-bg\">\r\n            <label class=\"etitle-label\" for=\"etitle\">제목</label>\r\n            <input type=\"text\" id=\"etitle\" v-model=\"etitle\" placeholder=\"제목\"> <br>\r\n            <label class=\"date-label\" for=\"dday\">D-Day</label>\r\n            <input type=\"date\" id=\"dday\" v-model=\"dday\"> <br>\r\n            <textarea rows=\"\" cols=\"\" id=\"etext\" v-model=\"etext\" placeholder=\"내용\" />\r\n            <button @click=\"registEvent\">이벤트 추가</button>\r\n            <pre id=\"errMsg\">{{ errMsg }}</pre>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    props: {\r\n        issAddEvent: Boolean\r\n    },\r\n    components: {},\r\n    data() {\r\n        return {\r\n            etitle: '',\r\n            dday: '',\r\n            etext: '',\r\n            errMsg: ''\r\n        }\r\n    },\r\n    created() { },\r\n    mounted() { },\r\n    unmounted() { },\r\n    methods: {\r\n        closeModal(event) {\r\n            if (event.target.classList.contains(\"black-bg\")) this.$emit(\"closeEvent\")\r\n        },\r\n        registEvent() {\r\n            let data = {\r\n                etitle: this.etitle,\r\n                etext: this.etext,\r\n                suser: 1,\r\n                dday: this.dday,\r\n                // suser : this.suser\r\n                // 추후 유저도 추가\r\n            }\r\n\r\n            // this.axios.defaults.headers.common = {\r\n            //     'Content-Type': 'application/json'\r\n            // }\r\n            axios.post(\"/feed/addEvent\", data\r\n            ).then(res => {\r\n                console.log(res);\r\n                this.$emit(\"closeEvent\")\r\n            }).catch(() => {\r\n                this.errMsg = '에러가 발생하였습니다.\\n 잠시후 재시도 부탁드립니다.'\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\ninput {\r\n    padding: 5px 7px;\r\n}\r\n\r\n#etitle {\r\n    width: 90%;\r\n    height: 2em;\r\n    margin: 3px;\r\n}\r\n\r\n.etitle-label {\r\n    display: inline-block;\r\n    width: 90%;\r\n    margin-top: 10px;\r\n}\r\n\r\n.date-label {\r\n    display: inline-block;\r\n    width: 90%;\r\n}\r\n\r\n#dday {\r\n    width: 90%;\r\n    height: 2em;\r\n}\r\n\r\n#etext {\r\n    margin-top: 1em;\r\n    padding: 0.5em;\r\n    width: 90%;\r\n    height: 4em;\r\n}\r\n\r\nbutton {\r\n    margin-top: 1em;\r\n    width: 90%;\r\n    height: 10%;\r\n    border: none;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #7de0b4;\r\n}\r\n\r\n#errMsg {\r\n    color: red;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}